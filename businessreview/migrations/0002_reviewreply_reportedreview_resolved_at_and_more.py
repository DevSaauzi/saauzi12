# Generated by Django 5.2.6 on 2025-09-22 08:58

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('businessreview', '0001_initial'),
        ('listings', '0002_alter_businesslisting_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReviewReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Review Reply',
                'verbose_name_plural': 'Review Replies',
            },
        ),
        migrations.AddField(
            model_name='reportedreview',
            name='resolved_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reportedreview',
            name='resolved_by',
            field=models.ForeignKey(blank=True, help_text='Admin who resolved this report', limit_choices_to={'user_type': 'admin'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reportedreview',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('reviewed', 'Reviewed'), ('resolved', 'Resolved')], default='pending', help_text='Admin review status', max_length=10),
        ),
        migrations.AddField(
            model_name='review',
            name='is_verified',
            field=models.BooleanField(default=False, help_text='True if user actually used the service'),
        ),
        migrations.AddField(
            model_name='review',
            name='media',
            field=models.JSONField(blank=True, default=list, help_text='List of image/video URLs'),
        ),
        migrations.AddField(
            model_name='review',
            name='rating_cleanliness',
            field=models.PositiveSmallIntegerField(blank=True, help_text='Rating for cleanliness (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='review',
            name='rating_price',
            field=models.PositiveSmallIntegerField(blank=True, help_text='Rating for price (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='review',
            name='rating_quality',
            field=models.PositiveSmallIntegerField(blank=True, help_text='Rating for quality (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='review',
            name='rating_service',
            field=models.PositiveSmallIntegerField(blank=True, help_text='Rating for service (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AlterField(
            model_name='review',
            name='rating',
            field=models.PositiveSmallIntegerField(help_text='Overall rating from 1 to 5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['business', '-created_at'], name='businessrev_busines_5abfcb_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['author'], name='businessrev_author__5f59fd_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['rating'], name='businessrev_rating_db1221_idx'),
        ),
        migrations.AddField(
            model_name='reviewreply',
            name='owner',
            field=models.ForeignKey(help_text='Must be the business owner', limit_choices_to={'user_type': 'owner'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reviewreply',
            name='review',
            field=models.OneToOneField(help_text='The review being replied to', on_delete=django.db.models.deletion.CASCADE, related_name='reply', to='businessreview.review'),
        ),
    ]
